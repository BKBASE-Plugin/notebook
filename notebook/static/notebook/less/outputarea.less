div.output_wrapper {
    /* this position must be relative to enable descendents to be absolute within it */
    position: relative;
    .vbox();
    // avoid scrolled output overlaying input in some strange circumstances
    z-index: 1;
}

/* class for the output area when it should be height-limited */
div.output_scroll {
    /* ideally, this would be max-height, but FF barfs all over that */
    height: 24em;
    /* FF needs this *and the wrapper* to specify full width, or it will shrinkwrap */
    width: 100%;

    overflow: auto;
    .corner-all;
    .box-shadow(inset 0 2px 8px rgba(0, 0, 0, .8));
    display: block;
}

/* output div while it is collapsed */
div.output_collapsed {
    margin: 0px;
    padding: 0px;
    .vbox();
}

div.out_prompt_overlay {
    height: 100%;
    padding: 0px @code_padding;
    position: absolute;
    .corner-all;
}

div.out_prompt_overlay:hover {
    /* use inner shadow to get border that is computed the same on WebKit/FF */
    // .box-shadow(inset 0 0 1px #000);
    // background: rgba(240, 240, 240, 0.5);
}

div.output_prompt {
    color: @output_prompt_color;
}

/* This class is the outer container of all output sections. */
div.output_area {
    padding: 0px;
    page-break-inside: avoid;
    &.mt-slim {
        margin-top: 0.4em;
    }
    .hbox();

    .MathJax_Display {
        // Inside a CodeCell, elements are left justified
        text-align: left !important;
    }

    .rendered_html {
        // Inside a CodeCell, elements are left justified
        table {
            margin-left: 0;
            margin-right: 0;
        }
    
        img {
            margin-left: 0;
            margin-right: 0;
        }
    }
    
    img, svg {
        max-width: 100%;
        height: auto;
        &.unconfined {
            max-width: none;
        }
    }

    .mglyph>img {
        max-width: none;
    }

    .output_publish_status {
        display: flex;
        align-items: center;
        .stage_item {
            font-size: 14px;
            color: #63656e;
            font-weight: 400;
            .icon {
                display: inline-block;
                color: #c4c6cc;
                font-size: 13px;
                margin-right: 3px;
                &.icon-running {
                    animation: rotation 2s infinite linear;
                }
            }
            .stage_time {
                color: #979ba5;
                margin-left: 3px;
            }
            &:not(:last-child)::after {
                content: "";
                display: block;
                width: 28px;
                height: 11px;
                float: right;
                margin: 0 8px;
                border-bottom: 1px solid #dcdee5;
            }
        }
    }
    .release_prompt {
        display: flex;
        justify-content: flex-end;
        padding: 0 0.4em;
    }
    .model_release_button {
        position: relative;
        z-index: 99;
        width: 56px;
        height: 32px;
        background: #3a84ff;
        text-align: center;
        line-height: 32px;
        color: #fff;
        border-radius: 2px;
        cursor: pointer;
        &.disabled {
            background-color: #dcdee5;
            border-color: #dcdee5;
            color: #fff;
            cursor: not-allowed;
        }
    }
    .output_model_release {
        height: 32px;
        background: #f0f8ff;
        border: 1px solid #c5daff;
        border-radius: 2px;
        padding-left: 10px;
        font-size: 12px;
        color: #63656e;
        &.error_message {
            border-color: #ffd2d2;
            background-color: #ffeded;
            .icon-info {
                color: #ea3636;
            }
        }
        .icon-info {
            color: #3a84ff;
            margin-right: 8px;
            font-size: 16px;
        }
        .link {
            color: #3a84ff;
            margin-left: 1px;
            cursor: pointer;
        }
    }
    .output_model_evaluete_wrapper {
        display: flex;
        .evaluete-card {
            margin-right: 20px;
            width: 200px;
            height: 100px;
            background: #ffffff;
            border-radius: 2px;
            border: 1px solid #dcdee5;
            padding: 16px 20px;
            &:hover {
                box-shadow: 0px 3px 6px 0px rgba(99, 83, 83, 0.2);
                cursor: pointer;

            }
            .evaluete-title {
                font-size: 12px;
                font-family: MicrosoftYaHei;
                text-align: left;
                color: #979ba5;
                line-height: 16px;
                margin: 0;
            }
            .evaluete-value {
                font-size: 30px;
                font-family: MicrosoftYaHei, MicrosoftYaHei-Bold;
                font-weight: 700;
                text-align: left;
                color: #63656e;
                line-height: 40px;
            }
        }
    }
}

@keyframes rotation {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(359deg);
    }
  }
/* This is needed to protect the pre formating from global settings such
   as that of bootstrap */
.output {
    .vbox();
}

@media (max-width: @screen-xs-min) {
    // move prompts above output on small screens
    div.output_area {
        .vbox();
    }
}

div.output_area pre {
    margin: 0;
    padding: 1px 0 1px 0;
    border: 0;
    vertical-align: baseline;
    color: #63656E;
    background-color: transparent;
    .border-radius(0);
}

/* This class is for the output subarea inside the output_area and after
   the prompt div. */
div.output_subarea {
    // Don't let contents overflow page area.
    overflow-x: auto;
    padding: @code_padding;
    .box-flex1();
    // appears to be needed for max-width in children to mean anything on Firefox:
    max-width: calc(~"100% - 14ex");
}

div.output_chart_panel {
    padding: 0;
    height: 420px;
    max-width: 100%;
    position: relative;
    bottom: -19px;
    margin-top: -10px;
    .bk-charts-panel-container {
        .panel-header {
            height: 40px;
            border-top: none;
            border-left: none;
            border-right: none;
        }
        .panel-content {
            height: calc(~"100% - 47px");
            margin-bottom: 0;
            .bkchart-panel-settings {
                height: 100%;
                border-left: none;
            }
            .bk-table-header-wrapper .bk-table-header-label {
                width:100%;
            }
            .cell {
                padding: 0 8px;
                margin-bottom: 0;
                &:hover::before{
                    position: absolute;
                    display: block;
                    top: -1px;
                    left: -1px;
                    width: 4px;
                    height: calc(100% + 2px);
                    content: '';
                    background: transparent;
                }
                .table-cell {
                    text-align: left;
                }
            }
        }
    }
}
div.output_scroll div.output_subarea {
    // if the output area is scrolling, we don't need scrollbars on the subarea
    overflow-x: visible;
}

/* The rest of the output_* classes are for special styling of the different
   output types */

/* all text output has this class: */
div.output_text {
    line-height: 29px;
    text-align: left;
    color: #63656E;
    /* This has to match that of the the CodeMirror class line-height below */  
    // line-height: @code_line_height;
}

/* stdout/stderr are 'text' as well as 'stream', but execute_result/error are *not* streams */
div.output_stream {
}

div.output_stdout {
}

div.output_stderr {
    background: #fdd; /* very light red background for stderr */
}

div.output_latex {
    text-align: left;
}

div.output_html {
}

div.output_png {
}

div.output_jpeg {
}

/* Empty output_javascript divs should have no height */
div.output_javascript:empty {
    padding: 0;
}

.js-error {
    color: darkred;
}

/* raw_input styles */

div.raw_input_container {
    line-height: @code_line_height;
    // for some reason, em padding doesn't compute the same for raw_input
    // that is not the first input, but px does
    padding-top: 5px;
}

pre.raw_input_prompt {
    /* nothing needed here. */
}

input.raw_input {
    font-family: @font-family-monospace;
    font-size: inherit;
    color: inherit;
    width: auto;
    /* make sure input baseline aligns with prompt */
    vertical-align: baseline;
    /* padding + margin = 0.5em between prompt and cursor */
    padding: 0em 0.25em;
    margin: 0em 0.25em;
}

input.raw_input:focus {
    box-shadow: none;
}

p.p-space {
    margin-bottom: 10px;
}

div.output_unrecognized {
  padding: 5px;
  font-weight: bold;
  color: red;
  // remove decoration from link
  a {
      color: inherit;
      text-decoration: none;

      &:hover {
          color: inherit;
          text-decoration: none;
      }
  }
}
